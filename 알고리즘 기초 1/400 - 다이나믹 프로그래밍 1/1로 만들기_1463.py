N = int(input())

# Memoization 부분
# (N이 아니라 N+1인 이유는 인덱스 1부터 사용하기 때문이다.)
dp = [0] * (N + 1)

# i가 1인 경우는 연산을 사용하는 횟수가 0회이므로 i는 2부터 시작한다.
for i in range(2, N+1):
    # 정수 i에 사용하는 연산을 1을 빼는 것으로 하는 경우
    dp[i] = dp[i-1] + 1

    # 정수 i에 사용하는 연산을 2를 나누는 것으로 하는 경우
    if i % 2 == 0:
        # 1을 빼는 것으로 했을때와 2를 나누는 것으로 했을 때 중에서
        # 더 적게 연산을 사용하는 경우를 선택해서 dp[i]에 넣는다.
        # (dp[i//2]에 +1을 하는 이유는 dp[i//2]의 횟수에 i에서 i//2로 가는데 사용한 연산 횟수 1도 더해줘야하기 때문이다.)
        dp[i] = min(dp[i], dp[i//2]+1)

    # 정수 i에 사용하는 연산을 3를 나누는 것으로 하는 경우
    if i % 3 == 0:
        # 1을 빼는 것으로 했을때, 2를 나누는 것으로 했을 때와 3을 나누는 것으로 했을 때 중에서
        # 더 적게 연산을 사용하는 경우를 선택해서 dp[i]에 넣는다.
        dp[i] = min(dp[i], dp[i//3]+1)

print(dp[N])
